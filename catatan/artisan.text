Laravel Framework 8.48.1

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 auth
  auth:clear-resets                 Flush expired password reset tokens
 blameable
  blameable:add-blameable-columns   add blameable columns to eloquent models, by default, created_by and updated_by
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 datatables
  datatables:editor                 Create a new DataTables Editor class.
  datatables:html                   Create a new DataTable html class.
  datatables:make                   Create a new DataTable service class.
  datatables:scope                  Create a new DataTable Scope class.
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 debugbar
  debugbar:clear                    Clear the Debugbar Storage
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 generate
  generate:migrations               Generate migrations from an existing database
 infyom
  infyom:api                        Create a full CRUD API for given model
  infyom:api_scaffold               Create a full CRUD API and Scaffold for given model
  infyom:migration                  Create migration command
  infyom:model                      Create model command
  infyom:publish                    Publishes & init api routes, base controller, base test cases traits.
  infyom:repository                 Create repository command
  infyom:rollback                   Rollback a full CRUD API and Scaffold for given model
  infyom:scaffold                   Create a full CRUD views for given model
 infyom.api
  infyom.api:controller             Create an api controller command
  infyom.api:requests               Create an api request command
  infyom.api:tests                  Create tests command
 infyom.publish
  infyom.publish:generator-builder  Publishes routes for generator builder and published views.
  infyom.publish:layout             Publishes auth files
  infyom.publish:templates          Publishes api generator templates.
  infyom.publish:user               Publishes Users CRUD file
 infyom.scaffold
  infyom.scaffold:controller        Create controller command
  infyom.scaffold:requests          Create a full CRUD views for given model
  infyom.scaffold:views             Create views file command
 key
  key:generate                      Set the application key
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:export                       Create a new export class
  make:factory                      Create a new model factory
  make:import                       Create a new import class
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
  make:transformer                  Create a new Transformer Class
  make:widget                       Create a new widget
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 modelCache
  modelCache:clear                  Flush cache for a given model. If no model is given, entire model-cache is flushed.
  modelCache:publish                Publish various assets of the 'Model Caching for Laravel' package.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:show                   Show a table of roles and permissions per guard
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 rinvex
  rinvex:migrate:bookings           Migrate Rinvex Bookings Tables.
  rinvex:publish:bookings           Publish Rinvex Bookings Resources.
  rinvex:rollback:bookings          Rollback Rinvex Bookings Tables.
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 scaffold.all
  scaffold.all:generate             Generate scaffold infyom based file json
 scaffold.all.schemajson
  scaffold.all.schemajson:generate  Generate scaffold infyom based file json
 schedule
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
